variables:
  - &rust_nightly_image "rustlang/rust:nightly"
  - &install_binstall "wget -O- https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz | tar -xvz -C /usr/local/cargo/bin"

steps:
  prepare_repo:
    image: alpine:3
    commands:
      - apk add git
      - git submodule init
      - git submodule update
    when:
      - event: [pull_request, tag]

  prettier_check:
    image: tmknom/prettier:3.4.2
    commands:
      - prettier -c . '!invisible-characters'
    when:
      - event: pull_request

  toml_fmt:
    image: tamasfe/taplo:0.9.3
    commands:
      - taplo format --check
    when:
      - event: pull_request

  cargo_fmt:
    image: *rust_nightly_image
    environment:
      # store cargo data in repo folder so that it gets cached between steps
      CARGO_HOME: .cargo_home
    commands:
      - rustup component add rustfmt
      - cargo +nightly fmt -- --check
    when:
      - event: pull_request

  cargo_shear:
    image: *rust_nightly_image
    commands:
      - *install_binstall
      - cargo binstall -y cargo-shear
      - cargo shear
    when:
      - event: pull_request

  cargo_clippy:
    image: *rust_nightly_image
    environment:
      CARGO_HOME: .cargo_home
    commands:
      - rustup component add clippy
      - cargo clippy -- -D warnings
    when:
      - event: pull_request

  cargo_test:
    image: *rust_nightly_image
    commands:
      - cargo test --no-fail-fast
    when:
      - event: pull_request

  cargo_build:
    image: *rust_nightly_image
    environment:
      CARGO_HOME: .cargo_home
    commands:
      - cargo build
    when:
      - event: pull_request

  publish_to_crates_io:
    image: *rust_nightly_image
    environment:
      CARGO_API_TOKEN:
        from_secret: dess_cargo_api_token
    commands:
      - cargo publish --token "$CARGO_API_TOKEN"
    when:
      - event: tag

  notify_on_build:
    image: alpine:3
    commands:
      - apk add curl
      - "curl -d'Invisible chars CI build ${CI_PIPELINE_STATUS}: ${CI_PIPELINE_URL}' ntfy.sh/invisible_chars_ci"
    when:
      - event: [pull_request, tag]
        status: [failure, success]

  notify_on_tag_deploy:
    image: alpine:3
    commands:
      - apk add curl
      - "curl -d'Invisible chars:${CI_COMMIT_TAG} deployed' ntfy.sh/invisible_chars_ci"
    when:
      - event: tag
